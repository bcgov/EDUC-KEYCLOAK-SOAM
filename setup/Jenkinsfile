import groovy.json.JsonSlurper 

pipeline {
    agent none
    options {
        disableResume()
    }
    stages {
        stage('Download setup files'){
            agent any
            steps{
                script{
                    dir('setup'){
                        sh 'bash ./download-kc.sh'
                    }
                }
            }
        }
        stage('SOAM Setup'){
            agent any
            steps{
                script{
                    dir('setup'){
                        env.TARGET_ENV = input message: 'User input required', ok: 'Release!',
                            parameters: [choice(name: 'TARGET_ENV', choices: 'dev\ntest\nprod', description: 'Choose the target env for setup')]
                        sh "oc project ${OPENSHIFT_NAMESPACE}-dev"
                        def soamPword = sh( script: "oc -o json get secret sso-admin-${envValue} | sed -n 's/.*\"username\": \"\(.*\)\"/\1/p' | base64 --decode", returnStdout: true).trim()
                        def soamUser = sh( script: "oc -o json get secret sso-admin-${envValue} | sed -n 's/.*\"password\": \"\(.*\)\",/\1/p' | base64 --decode", returnStdout: true).trim()
                        setupProperties = input(
                            id: 'setupProperties', message: 'Please enter the properties required to setup soam, keycloak, and config maps:',
                            parameters: [
                                string(defaultValue: "",
                                        description: 'Dev Exchange Keyclaok Admin user',
                                        name: 'DEVEXCHANGE_KC_LOAD_USER_ADMIN'),
                                string(defaultValue: "",
                                        description: 'Dev Exchange Keyclaok Admin user',
                                        name: 'DEVEXCHANGE_KC_LOAD_USER_PASS'),
                                string(defaultValue: "",
                                        description: 'The BC Dev Exchange realm ID ',
                                        name: 'DEVEXCHANGE_KC_REALM_ID'),
                            ])
                        def propText = "SOAM_KC_LOAD_USER_ADMIN=${soamUser}\nSOAM_KC_LOAD_USER_PASS=${soamPass}\nDEVEXCHANGE_KC_LOAD_USER_ADMIN=${setupProperties.DEVEXCHANGE_KC_LOAD_USER_ADMIN}\nDEVEXCHANGE_KC_LOAD_USER_PASS=${setupProperties.DEVEXCHANGE_KC_LOAD_USER_PASS}\nKCADM_FILE_BIN_FOLDER=keycloak-9.0.3/bin\nSOAM_KC_REALM_ID=master\nDEVEXCHANGE_KC_REALM_ID=${setupProperties.DEVEXCHANGE_KC_REALM_ID}\nOPENSHIFT_NAMESPACE=${setupProperties.OPENSHIFT_NAMESPACE}"
                        writeFile(file:"properties/setup-${env.TARGET_ENV}.properties", text: propText)
                        def rFile = readFile "properties/setup-${env.TARGET_ENV}.properties"
                        echo "Property file content: ${rFile}"
                        echo 'Starting BC Dev Exchange Keycloak Setup...'
                        sh(
                            script: "bash ./devexchange-keycloak-setup.sh \"${env.TARGET_ENV}\""
                        )
                        echo 'Starting SOAM Setup...'
                        sh(
                            script: "bash ./soam-keycloak-setup.sh \"${env.TARGET_ENV}\""
                        )
                    }
                }
            }
        }
    }
}